#Defining the quick sort function 'qiksort' using list comprehension, as recursion seems to be much slower.
#This is assumably because list comprehension implies C loop, which is faster than Python's 'for' block.

def qiksort(list):
    #This is just effectively a description of the function.
    """ Quicksort a list
    """
    if list == []: 
        return []
    pivot = list[0]
    lesser = qiksort([x for x in list[1:] if x < pivot])
    greater = qiksort([x for x in list[1:] if x >= pivot])
    return lesser + [pivot] + greater

#If you don't understand quicksort: http://www.algolist.net/Algorithms/Sorting/Quicksort
#In a more clear but slower code you can create a partition function that the qiksort utilises. In this example it is just a direct part of the code.
